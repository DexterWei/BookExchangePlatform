<!DOCTYPE html>
<html lang="en" ng-app="myApp">

<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
  <meta name="description" content="">
  <meta name="author" content="">
  <link rel="icon" href="http://getbootstrap.com/favicon.ico">

  <title>BookExchangePlatform/title>

  <script src="/javascripts/angular.min.js"></script>
  
  
  <!-- Bootstrap core CSS -->
  <link rel="stylesheet" href="/stylesheets/bootstrap.min.css" />
  

  <!-- Custom styles for this template -->
  <link href="/stylesheets/dashboard.css" rel="stylesheet" />
  

  <!-- Just for debugging purposes. Don't actually copy these 2 lines! -->
  <!--[if lt IE 9]><script src="../../assets/js/ie8-responsive-file-warning.js"></script><![endif]-->
  <script src="/javascripts/ie-emulation-modes-warning.js"></script>
  

  
  <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
  <!--[if lt IE 9]>
  <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
  <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
  <![endif]-->

 
  
 <script data-require="angular.js@*" data-semver="1.2.0-rc3-nonmin" src="http://code.angularjs.org/1.2.0-rc.3/angular.js"></script>
   <script data-require="ng-table@*" data-semver="0.3.1" src="http://bazalt-cms.com/assets/ng-table/0.3.1/ng-table.js"></script>
    
    <link data-require="ng-table@*" data-semver="0.3.1" rel="stylesheet" href="http://bazalt-cms.com/assets/ng-table/0.3.1/ng-table.css" />
    <link data-require="bootstrap-css@*" data-semver="3.0.0" rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css" />
    



</head>

<body  ng-controller="AdminCtrl">

<nav class="navbar navbar-inverse navbar-fixed-top">
  <div class="container-fluid">
    <div class="navbar-header">
      <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
        <span class="sr-only">Toggle navigation</span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
      </button>
      <a class="navbar-brand" href="#"> {{user.f_name}}</a>
    </div>
    <div id="navbar" class="navbar-collapse collapse">
	    <ul class="nav navbar-nav navbar-right">
		   <li><a href ng-click="tab = 0;main()">Index</a>
		   </li>
		   <li><a href ng-click="tab = 1;listOwnedBooks()">Owned Books</a>
		   </li>
		   <li><a href ng-click="tab = 1;listWantBooks()">Want Books</a>
		   </li>
		   <li><a href ng-click="tab = 3;trace()">Exchange Trace</a>
		   </li>
	       <li><a href ng-click="logout()"><span class='glyphicon glyphicon-log-out'></span> Log Out</a></li> 
	     </ul>
      <!--<form class="navbar-form navbar-right">
          <input type="text" class="form-control" placeholder="Search...">
        </form>-->
    </div>
  </div>
</nav>

<div class="container-fluid">
  <div class="row">
    <div class="col-sm-3 col-md-2 sidebar">
      <ul class="nav nav-sidebar" ng-init="tab = 0">
        <li ng-class="{ active:tab === 0 }"><a href ng-click="tab = 0;main()">Index<span class="sr-only">(current)</span></a>
        </li>
        <li ng-class="{ active:tab === 1 }"><a href ng-click="tab=1;listOwnedBooks()">Owned Books</a>
        </li>
        <li ng-class="{ active:tab === 1 }"><a href ng-click="tab = 1;listWantBooks()">Want Books</a>
        </li>
        <li ng-class="{ active:tab === 3 }"><a href ng-click="tab = 3;trace()">Exchange Trace</a>
        </li>
      </ul>
    </div>


    <div ng-show="tab === 0" class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
      <h1 class="page-header">Dashboard</h1>

     

      <h2 class="sub-header">Section title</h2>
      
    </div>

    <div ng-show="tab === 1" class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">
      
      <h1 ng-show="own" class="page-header">{{header}}<input type="button"  value="Create" class="btn btn-sm btn-primary navbar-right" ng-click="showCreateOwnBook()"></h1>
      <h1 ng-show="!own" class="page-header">{{header}}<input type="button"  value="Create" class="btn btn-sm btn-primary navbar-right" ng-click="showCreateWantBook()"></h1>

      <label>ID: <input ng-model="search.name"></label> <label>First Name: <input ng-model="search.version"></label> <label>Last Name: <input ng-model="search.author"></label>
      <table ng-table="tableOwnBooks"  class="table">
            <tr ng-repeat="book in ownBooks_data | filter:search:strict">
                <td data-title="'Book ID'">
                    {{book.id}}
                </td>
                <td data-title="'Book Name'">
                    {{book.name}}
                </td>
                <td data-title="'Version'">
                	{{book.verson}}
                </td>
                <td data-title="'Author'">
            		{{book.author}}
            	</td>
                <td data-title="'View & Edit'">
                    <a ng-click="viewEditBook(book)"><span class="glyphicon glyphicon-eye-open"></span></a>  
                    
                </td>
           
                <td data-title="'Delete'">
                    <a ng-click="deleteOwnBook(user,$index)"><span class="glyphicon glyphicon-remove"></span></a>  

                </td>
                <td data-title="'Match'">
                	<a ng-click="macthBook(user,$index)"><span class="glyphicon glyphicon-remove"></span></a>  
                </td>
            </tr>
        </table>
        
        <div ng-show="bookDetail" >
	        <table class="table">
	           <thead>
		          <tr>
		            <th>{{book.id}}</th>
		          </tr>
		        </thead>
		          <tbody>
			          <tr>
			            <td>Book ID:</td>
			            <td> {{book.id}}</td>
			          </tr> 
			          <tr>
			            <td>Book Name:</td>
			            <td><input type="text" ng-model=book.name></td>
			          </tr> 
			          <tr>
			            <td>Version:</td>
			            <td><input type="text" ng-model=book.version></td>
			          </tr> 
			          <tr>
			            <td>Author:</td>
			            <td><input type="text" ng-model=book.author></td>
			          </tr> 
		          </tbody>
		       </table>
		       <input type="button"  value="Save" class="btn btn-sm btn-primary navbar-right" ng-click="EditBook(book.id)">
		</div>
     
    </div>

   
    <div ng-show="tab === 3" class="col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main">

      
    </div>


   
  </div>
</div>


<script>
  var app = angular.module('myApp', ['ngTable']);
  app.controller('AdminCtrl', function($scope,$http,$filter, ngTableParams) {
	  alert('yes');
 	$scope.getAllClients=function(){
 		$scope.clientProfile=0;
 		$scope.clientBuildings=0;
 		$http.get('http://demo8440210.mockable.io/clients').success(function(res) {
        	alert(JSON.stringify(res));
        	$scope.clients_data=res;
	        $scope.tableParams = new ngTableParams({
		        page: 1,            // show first page
		        count: 10,          // count per page
		        filter: {
		            client_id: '1'       // initial filter
		        },
		        sorting: {
		            client_id: 'asc'     // initial sorting
		        }
	    	}, {
		        total: $scope.clients_data.length, // length of data
		        getData: function($defer, params) {
		            // use build-in angular filter
		            var filteredData = params.filter() ?
		                    $filter('filter')($scope.clients_data, params.filter()) :
		                    $scope.clients_data;
		            var orderedData = params.sorting() ?
		                    $filter('orderBy')(filteredData, params.orderBy()) :
		                    $scope.clients_data;
		
		            params.total(orderedData.length); // set total for recalc pagination
		            $defer.resolve(orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
		        }
	   	 });
	   });
	   
	   $scope.viewClient=function(user){
	   		//$scope.clientProfile=!$scope.clientProfile;
	   		$scope.clientProfile=1;
	   		$scope.clientBuildings=0;
	   		$scope.client=user;
	   };
	   
	    $scope.viewBuildings=function(user){
	   		//$scope.clientProfile=!$scope.clientProfile;
	   		$scope.clientProfile=0;
	   		$scope.clientBuildings=1;
	   		$http({
		        method: 'GET',
		        url: 'http://demo8440210.mockable.io/buildingsOf/123-45-6789',
		        //params: { "client_id":user.client_id }

     		 }).success(function(res) {
     		 	alert(JSON.stringify(res));
	   			 $scope.buildings_data=res;
	   			 $scope.TclientBuildings = new ngTableParams({
			          page: 1, // show first page
			          count: 5 // count per page
			        }, {
			          total: $scope.buildings_data.length, // length of data
			          getData: function($defer, params) {
			            $defer.resolve( $scope.buildings_data.slice((params.page() - 1) * params.count(), params.page() * params.count()));
			          }
			     });
	   		
	   		});
	   		
	   		
	   };
	   
	   
	   $scope.deleteClient=function(client_id,order){
	   		if(confirm("Delete Client: "+client_id+"?")){
	   			$http({
			          method: 'POST',
			          url: 'http://demo8440210.mockable.io/deleteClient',
			          data: { "client_id": client_id}

        		}).success(function(res) {
        			if(res.status==200){
        				alert("Delete Success!");
        				$scope.clients_data.splice(order,1);
        			}else{
        				alert("Delete Failed!");
        			
        			}		            
		        });
		     }     		
 	   };
 	   
 	};
 	
 	
 	$scope.getAllBuildings=function(){
 		var loadBuildings=function(){
	 		$scope.buildingDetail=0;
	 		//$scope.clientBuildings=0;
	 		$http.get('http://demo8440210.mockable.io/buildings').success(function(res) {
	        	//alert(JSON.stringify(res));
	        	$scope.AllBuildings_data=res;
		        $scope.tableBuildings = new ngTableParams({
			        page: 1,            // show first page
			        count: 10,          // count per page
			        filter: {
			            building_id: '1'       // initial filter
			        },
			        sorting: {
			            building_id: 'asc'     // initial sorting
			        }
		    	}, {
			        total: $scope.AllBuildings_data.length, // length of data
			        getData: function($defer, params) {
			            // use build-in angular filter
			            var filteredData = params.filter() ?
			                    $filter('filter')($scope.AllBuildings_data, params.filter()) :
			                    $scope.AllBuildings_data;
			            var orderedData = params.sorting() ?
			                    $filter('orderBy')(filteredData, params.orderBy()) :
			                    $scope.AllBuildings_data;
			
			            params.total(orderedData.length); // set total for recalc pagination
			            $defer.resolve(orderedData.slice((params.page() - 1) * params.count(), params.page() * params.count()));
			        }
		   	 });
		   });
	 	
 		};
 		loadBuildings();
	   
	   $scope.showEditBuilding=function(user){
	   		//$scope.clientProfile=!$scope.clientProfile;
	   		$scope.buildingDetail=1;
	   		//$scope.clientBuildings=0;
	   		$scope.building=user;
	   };
	   
	   $scope.deleteBuilding=function(building_id,order){
	   		if(confirm("Delete Buildingt: "+building_id+"?")){
	   			$http({
			          method: 'POST',
			          url: 'http://demo8440210.mockable.io/deleteBuilding',
			          data: { "building_id":building_id}

       		}).success(function(res) {
       			if(res.status==200){
       				alert("Delete Success!");
       				$scope.AllBuildings_data.splice(order,1);
       			}else{
       				alert("Delete Failed!");
       			
       			}		            
		        });
		     }     		
	   };
	   
	   $scope.createOrEditBuilding=function(id){
		   alert(id);
		   if(id==="undefined"){
			   
			   $http({
			          method: 'POST',
			          url: 'http://demo8440210.mockable.io/createBuilding',
			        
			   }).success(function(res) {
					if(res.status==201){
						alert("Create Success!");
						loadBuildings();
					}else{
						alert("Create Failed!");
					
					}		            
		        });
			   
		   }else{
			   $http({
			          method: 'POST',
			          url: 'http://demo8440210.mockable.io/editBuilding',
			          data: { "building_id":$scope.building.building_id}
	
			   }).success(function(res) {
					if(res.status==200){
						alert("Edit Success!");
						loadBuildings();
					}else{
						alert("Edit Failed!");
					
					}		            
		        });
		   }
		   
	   };
	   
	   $scope.showCreateBuilding=function(){
		   $scope.building=[];
		   $scope.buildingDetail=1;
		  
	   };
	   
	   
	   
	   
	   
 	
 	};
 	
    
  });
</script>

<!-- Bootstrap core JavaScript
  ================================================== -->
<!-- Placed at the end of the document so the pages load faster -->
<script src="/javascripts/jquery.min.js"></script>

<script src="/javascripts/bootstrap.min.js"></script>

<!-- Just to make our placeholder images work. Don't actually copy the next line! -->
<script src="/javascripts/holder.js"></script>

<!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
<script src="/javascripts/ie10-viewport-bug-workaround.js"></script>

</body>

</html>